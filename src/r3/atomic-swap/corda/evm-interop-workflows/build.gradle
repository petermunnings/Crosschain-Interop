apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'net.corda.plugins.quasar-utils'
apply plugin: 'org.jetbrains.kotlin.jvm'
apply plugin: 'kotlin'
apply plugin: 'java'

repositories {
    mavenCentral()
    maven { url 'https://download.corda.net/maven/corda-releases' }
    maven { url 'https://download.corda.net/maven/corda-dependencies' }
}

// The module is shipped to Corda Node as Cordapp, although it doesn't have any flows.
cordapp {
    targetPlatformVersion 140
    minimumPlatformVersion 140
    workflow {
        name "EVM Interop Contracts Library"
        vendor "Corda Open Source"
        licence "Apache License, Version 2.0"
        versionId 1
    }
}

sourceSets {
    main {
        resources {
            srcDir rootProject.file("config/dev")
        }
    }
    test {
        resources {
            srcDir rootProject.file("config/test")
        }
    }
    integrationTest {
        kotlin {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integrationTest/kotlin')
        }
    }
}

dependencies {
    // Kotlin standard library
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // Corda dependencies
    cordaProvided "$corda_core_release_group:corda-core:$corda_core_release_version"

    // Web3j dependencies
    api ("org.web3j:core:$web3jVersion") { transitive = true }

    // Project dependencies
    api project(':evm-interop-common')
    cordapp project(':evm-interop-contracts')

    implementation "javax.persistence:javax.persistence-api:$persistence_version"

    // test dependencies
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testImplementation "junit:junit:$junit_version"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.mockito:mockito-inline:$mockitoVersion"

    testImplementation("org.web3j:core:$web3jVersion")
    testImplementation("org.web3j:utils:$web3jVersion")
    testImplementation("org.web3j:crypto:$web3jVersion")
    testImplementation("org.web3j:rlp:$web3jVersion")

    cordaProvided "$corda_core_release_group:corda-core:$corda_core_release_version"
    cordaProvided "$corda_release_group:corda-jackson:$corda_release_version"
    cordaProvided "$corda_release_group:corda-rpc:$corda_release_version"
    cordaProvided "$corda_release_group:corda-node-api:$corda_release_version"

    testImplementation "$corda_release_group:corda-node-driver:$corda_release_version"
    // Needed by deployNodes task.
    corda "$corda_release_group:corda:$corda_release_version"
    cordaProvided "$corda_core_release_group:corda-core-test-utils:$corda_core_release_version"
    cordaProvided "$corda_core_release_group:corda-test-utils:$corda_core_release_version"
}

