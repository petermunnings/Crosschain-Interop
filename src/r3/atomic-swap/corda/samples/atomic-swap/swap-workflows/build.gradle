apply plugin: 'kotlin'

apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'net.corda.plugins.quasar-utils'
//description 'Atomic Swap Cordapp - Workflows'

cordapp {
    targetPlatformVersion 140
    minimumPlatformVersion 140
    workflow {
        name "Atomic Swap Cordapp"
        versionId 1
        licence "Apache License, Version 2.0"
        vendor "R3"
    }
}

sourceSets {
    main {
        resources {
            srcDir rootProject.file("config/dev")
        }
    }
    test {
        resources {
            srcDir rootProject.file("config/test")
        }
    }
    integrationTest {
        kotlin {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integrationTest/kotlin')
        }
    }
}

dependencies {
    cordaProvided "$corda_core_release_group:corda-core:$corda_core_release_version"
    cordaBootstrapper ("$corda_release_group:corda-node-api:$corda_release_version") {
        exclude group: "ch.qos.logback", module: "logback-classic"
    }
    cordaProvided "$corda_release_group:corda:$corda_release_version"

    cordaProvided "$corda_core_release_group:corda-core-test-utils:$corda_core_release_version"
    cordaProvided "$corda_core_release_group:corda-test-utils:$corda_core_release_version"

    cordaProvided "org.apache.logging.log4j:log4j-slf4j-impl:${log4j_version}"
    cordaProvided "org.apache.logging.log4j:log4j-web:${log4j_version}"
    cordaProvided "org.slf4j:jul-to-slf4j:$slf4j_version"

    api project(':evm-interop-common')
    api ("org.web3j:core:$web3jVersion") { transitive = true }

    cordapp project(':evm-interop-contracts')
    cordapp project(':evm-interop-workflows')

    // test dependencies
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testImplementation "junit:junit:$junit_version"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.mockito:mockito-inline:$mockitoVersion"

    testImplementation("org.web3j:core:$web3jVersion")
    testImplementation("org.web3j:utils:$web3jVersion")
    testImplementation("org.web3j:crypto:$web3jVersion")
    testImplementation("org.web3j:rlp:$web3jVersion")

    testImplementation "$corda_release_group:corda-node:$corda_release_version"
    testImplementation "$corda_release_group:corda-node-driver:$corda_release_version"
    testImplementation "$corda_release_group:corda-core-test-utils:$corda_release_version"
}

